{"version":3,"sources":["serviceWorker.ts","register/Register.tsx","signin/Signin.tsx","Landing.tsx","home/Home.tsx","metrics/Metrics.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","Register","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","event","axios","post","state","then","r","console","log","setState","showDialogue","username","password","_this2","react_default","a","createElement","Container","component","maxWidth","CssBaseline","className","TextField","variant","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","attr","target","value","type","FormControlLabel","control","Checkbox","color","Button","onClick","Grid","container","item","Link","RouterLink","to","Dialog","open","onClose","x","aria-labelledby","aria-describedby","DialogTitle","DialogActions","React","Component","Signin","componentDidMount","localStorage","getItem","asString","data","startsWith","document","cookie","slice","length","loggedIn","loginError","react_router","Landing","logout","Drawer","classes","paper","anchor","Divider","List","ListItem","button","key","ListItemIcon","Home_default","ListItemText","primary","NetworkWifi_default","SupervisedUserCircle_default","child","Home","Metrics","Box","m","spacing","xs","Card","index_esm","chartType","spreadSheetUrl","options","hAxis","format","vAxis","rootProps","data-testid","width","height","mapsApiKey","loader","App","jwt","routing","react_router_dom","exact","path","render","Landing_Landing","Home_Home","Metrics_Metrics","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.df2e04cc.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\ninterface RegisterProps {\n}\n\ninterface RegisterState {\n    username: string | null;\n    password: string | null;\n    showDialogue: boolean;\n}\n\nexport default class Register extends React.Component<RegisterProps, RegisterState> {\n    constructor(props: RegisterProps) {\n        super(props);\n        this.state = {\n            username: null,\n            password: null,\n            showDialogue: false\n        };\n    }\n\n\n    public handleSubmit = (event: any) => {\n        axios.post(\"/register\", this.state).then((r) => {\n            console.log(r);\n        }).then((r) => {\n            this.setState({showDialogue: true});\n        });\n    };\n\n    public  render() {\n        return (\n            <div>\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline />\n                    <div className={\"papers\"}>\n                        <div className={\"form\"}>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"username\"\n                                label=\"Username\"\n                                name=\"username\"\n                                autoComplete=\"username\"\n                                autoFocus\n                                onChange={attr => this.setState({username: attr.target.value})}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                onChange={attr => this.setState({password: attr.target.value})}\n                            />\n                            <FormControlLabel\n                                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                                label=\"Remember me\"\n                            />\n                            <Button\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={\"submit\"}\n                                onClick={this.handleSubmit}\n                            >\n                                Sign Up\n                            </Button>\n                            <Grid container>\n                                <Grid item>\n                                    <Link component={RouterLink} to=\"/signin\" variant=\"body2\">\n                                        {\"Sign in\"}\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </div>\n                </Container>\n                <Dialog\n                    open={this.state.showDialogue}\n                    onClose={(x) => this.setState({showDialogue: false})}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"You have successfully registered.\"}</DialogTitle>\n                    <DialogActions>\n                        <Button onClick={(x) => this.setState({showDialogue: false})} color=\"primary\">\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\nimport {Link as RouterLink, Redirect} from 'react-router-dom';\nimport '../index.css';\n\ninterface SignInProps {\n}\n\ninterface SignInState {\n    username: string | null;\n    password: string | null;\n    loginError: string | null;\n    loggedIn: boolean;\n}\n\nexport default class Signin extends React.Component<SignInProps, SignInState> {\n    constructor(props: SignInProps) {\n        super(props);\n        this.state = {\n            username: null,\n            password: null,\n            loginError: null,\n            loggedIn: false\n        };\n    }\n\n    componentDidMount = (): void => {\n        const jwt = localStorage.getItem(\"dm874-jwt\");\n\n        if (jwt == null) {\n        }\n    };\n\n    public handleSubmit = (event: any) => {\n        axios.post(\"/login\", this.state).then((r) => {\n            const asString = (r.data as string);\n            if (asString.startsWith(\"Token:\")) {\n                document.cookie = \"dm874_jwt=\" + asString.slice(\"Token:\".length);\n                this.setState({loggedIn: true});\n            } else {\n                this.setState({loginError: asString});\n            }\n        });\n    };\n\n    public  render() {\n\n        if (this.state.loggedIn) {\n            return <Redirect to={\"/home\"}/>;\n        }\n\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className={\"papers\"}>\n                    <div className={\"form\"}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"username\"\n                            label=\"Username\"\n                            name=\"username\"\n                            autoComplete=\"username\"\n                            autoFocus\n                            onChange={attr => this.setState({username: attr.target.value})}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            onChange={attr => this.setState({password: attr.target.value})}\n                        />\n                        <FormControlLabel\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\n                            label=\"Remember me\"\n                        />\n                        <Button\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={\"submit\"}\n                            onClick={this.handleSubmit}\n                        >\n                            Sign In\n                        </Button>\n                        <Grid container>\n                            <Grid item>\n                                <Link component={RouterLink} to=\"/register\" variant=\"body2\">\n                                    {\"Don't have an account? Sign Up\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </div>\n            </Container>\n        );\n    }\n}\n\n//export default withStyles(signinStyle, {withTheme: true})(Signin as any) as any;\n","import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport HomeIcon from '@material-ui/icons/Home';\nimport MetricsIcon from '@material-ui/icons/NetworkWifi';\nimport LogoutIcon from '@material-ui/icons/SupervisedUserCircle';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Link from \"@material-ui/core/Link\";\n\ninterface LandingProps {\n    child: React.ReactNode;\n}\n\ninterface LandingState {\n\n}\n\nexport default class Landing extends React.Component<LandingProps, LandingState> {\n    constructor(props: LandingProps) {\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    logout = () => {\n        document.cookie = \"\";\n    };\n\n    public render() {\n        return (\n            <div>\n                <Drawer\n                    className={\"drawer\"}\n                    variant=\"permanent\"\n                    classes={{\n                        paper: \"drawerPaper\",\n                    }}\n                    anchor=\"left\"\n                >\n                    <div className={\"toolbar\"} />\n                    <Divider />\n                    <List>\n                        <ListItem button key={\"Home\"} component={RouterLink} to=\"/home\" >\n                            <ListItemIcon>{<HomeIcon/>}</ListItemIcon>\n                            <ListItemText primary={\"Home\"} />\n                        </ListItem>\n                        <ListItem button key={\"Metrics\"} component={RouterLink} to=\"/metrics\" >\n                            <ListItemIcon>{<MetricsIcon/>}</ListItemIcon>\n                            <ListItemText primary={\"Metrics\"} />\n                        </ListItem>\n                    </List>\n                    <Divider />\n                    <List>\n                        <ListItem button key={\"Logout\"} onClick={this.logout} component={RouterLink} to=\"/\" >\n                            <ListItemIcon>{<LogoutIcon/>}</ListItemIcon>\n                            <ListItemText primary={\"Logout\"} />\n                        </ListItem>\n                    </List>\n                </Drawer>\n                {this.props.child}\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\nimport {Link as RouterLink, Redirect} from 'react-router-dom';\nimport '../index.css';\n\ninterface HomeProps {\n}\n\ninterface HomeState {\n\n}\n\nexport default class Home extends React.Component<HomeProps, HomeState> {\n    constructor(props: HomeProps) {\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    public  render() {\n\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <h1>Home!</h1>\n            </Container>\n        );\n    }\n}\n\n//export default withStyles(signinStyle, {withTheme: true})(Signin as any) as any;\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport '../index.css';\nimport {Chart} from \"react-google-charts\";\nimport Card from '@material-ui/core/Card';\nimport {Box} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\n\ninterface MetricsProps {\n}\n\ninterface MetricsState {\n\n}\n\nexport default class Metrics extends React.Component<MetricsProps, MetricsState> {\n    constructor(props: MetricsProps) {\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    public  render() {\n\n        return (\n            <Container component=\"main\" maxWidth=\"md\">\n                <Box m={3}/>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <Card>\n                            <Chart\n                                chartType=\"ScatterChart\"\n                                spreadSheetUrl=\"https://docs.google.com/spreadsheets/d/1jN0iw0usssnsG1_oi-NXtuKfsUsGme09GsFidbqxFYA/edit#gid=0\"\n                                options={{\n                                    hAxis: {\n                                        format: 'short',\n                                    },\n                                    vAxis: {\n                                        format: 'decimal',\n                                        // format:'scientific'\n                                        // format:'long'\n                                        // format:'percent'\n                                    },\n                                }}\n                                rootProps={{ 'data-testid': '1' }}\n                            />\n                        </Card>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <Card>\n                            <Chart\n                                width={'500px'}\n                                height={'300px'}\n                                chartType=\"GeoChart\"\n                                data={[\n                                    ['Country', 'Popularity'],\n                                    ['Germany', 200],\n                                    ['United States', 300],\n                                    ['Brazil', 400],\n                                    ['Canada', 500],\n                                    ['France', 600],\n                                    ['RU', 700],\n                                ]}\n                                // Note: you will need to get a mapsApiKey for your project.\n                                // See: https://developers.google.com/chart/interactive/docs/basic_load_libs#load-settings\n                                mapsApiKey=\"YOUR_KEY_HERE\"\n                                rootProps={{ 'data-testid': '1' }}\n                            />\n                        </Card>\n                    </Grid>\n                    <Grid item xs={8}>\n                        <Card>\n                            <Chart\n                                width={600}\n                                height={'300px'}\n                                chartType=\"Sankey\"\n                                loader={<div>Loading Chart</div>}\n                                data={[\n                                    ['From', 'To', 'Weight'],\n                                    ['Brazil', 'Portugal', 5],\n                                    ['Brazil', 'France', 1],\n                                    ['Brazil', 'Spain', 1],\n                                    ['Brazil', 'England', 1],\n                                    ['Canada', 'Portugal', 1],\n                                    ['Canada', 'France', 5],\n                                    ['Canada', 'England', 1],\n                                    ['Mexico', 'Portugal', 1],\n                                    ['Mexico', 'France', 1],\n                                    ['Mexico', 'Spain', 5],\n                                    ['Mexico', 'England', 1],\n                                    ['USA', 'Portugal', 1],\n                                    ['USA', 'France', 1],\n                                    ['USA', 'Spain', 1],\n                                    ['USA', 'England', 5],\n                                    ['Portugal', 'Angola', 2],\n                                    ['Portugal', 'Senegal', 1],\n                                    ['Portugal', 'Morocco', 1],\n                                    ['Portugal', 'South Africa', 3],\n                                    ['France', 'Angola', 1],\n                                    ['France', 'Senegal', 3],\n                                    ['France', 'Mali', 3],\n                                    ['France', 'Morocco', 3],\n                                    ['France', 'South Africa', 1],\n                                    ['Spain', 'Senegal', 1],\n                                    ['Spain', 'Morocco', 3],\n                                    ['Spain', 'South Africa', 1],\n                                    ['England', 'Angola', 1],\n                                    ['England', 'Senegal', 1],\n                                    ['England', 'Morocco', 2],\n                                    ['England', 'South Africa', 7],\n                                    ['South Africa', 'China', 5],\n                                    ['South Africa', 'India', 1],\n                                    ['South Africa', 'Japan', 3],\n                                    ['Angola', 'China', 5],\n                                    ['Angola', 'India', 1],\n                                    ['Angola', 'Japan', 3],\n                                    ['Senegal', 'China', 5],\n                                    ['Senegal', 'India', 1],\n                                    ['Senegal', 'Japan', 3],\n                                    ['Mali', 'China', 5],\n                                    ['Mali', 'India', 1],\n                                    ['Mali', 'Japan', 3],\n                                    ['Morocco', 'China', 5],\n                                    ['Morocco', 'India', 1],\n                                    ['Morocco', 'Japan', 3],\n                                ]}\n                                rootProps={{ 'data-testid': '2' }}\n                            />\n                        </Card>\n                    </Grid>\n                </Grid>\n            </Container>\n        );\n    }\n}\n\n//export default withStyles(signinStyle, {withTheme: true})(Signin as any) as any;\n","import React from 'react';\nimport './App.css';\nimport Signin from \"./signin/Signin\";\nimport {Redirect} from \"react-router\";\n\nconst App: React.FC = () => {\n    const jwt = document.cookie.slice(\"dm874_jwt=\".length);\n\n    console.log(jwt);\n\n    if (jwt.length === 0) {\n        return (\n            <Redirect to={\"/signin\"}/>\n        );\n    } else {\n        return (\n            <Redirect to={\"/home\"}/>\n        );\n    }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {Route, Link, BrowserRouter} from 'react-router-dom'\nimport Register from \"./register/Register\";\nimport Signin from \"./signin/Signin\";\nimport Landing from \"./Landing\";\nimport Home from \"./home/Home\";\nimport Metrics from \"./metrics/Metrics\";\nimport App from \"./App\";\n\nconst routing = (\n  <BrowserRouter>\n      <div className={\"global\"}>\n          <Route exact path=\"/\" component={App} />\n          <Route exact path=\"/signin\" component={Signin} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/home\" render={(props) => (\n              <Landing child={<Home/>}/>\n          )} />\n          <Route exact path=\"/metrics\" render={(props) => (\n              <Landing child={<Metrics/>}/>\n          )} />\n      </div>\n  </BrowserRouter>\n);\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
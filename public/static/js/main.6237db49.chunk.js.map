{"version":3,"sources":["serviceWorker.ts","register/Register.tsx","util/AuthHost.tsx","signin/Signin.tsx","util/MaybeWebsocket.tsx","home/Home.tsx","App.tsx","global/GlobalTheme.tsx","global/LoggedInFrame.tsx","util/SearchSelector.tsx","util/HostString.tsx","soogning/QueryableTable.tsx","soogning/Soogning.tsx","analytics/Economy.tsx","analytics/QueryEngine.tsx","analytics/Analytics.tsx","settings/Settings.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","Register","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","event","axios","post","state","then","r","console","log","setState","showDialogue","username","password","_this2","react_default","a","createElement","Container","component","maxWidth","CssBaseline","className","TextField","variant","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","attr","target","value","type","FormControlLabel","control","Checkbox","color","Button","onClick","Grid","container","item","Link","RouterLink","to","Dialog","open","onClose","x","aria-labelledby","aria-describedby","DialogTitle","DialogActions","React","Component","AuthHost","Signin","authenticate","_ref","asyncToGenerator","regenerator_default","mark","_callee","requestBody","host","additional","response","wrap","_context","prev","next","startsWith","fetch","headers","Content-Type","method","body","JSON","stringify","e","sent","json","abrupt","stop","_x","apply","arguments","responseJson","Cookies","set","payload","loggedIn","loginError","react_router","MaybeWebsocket","listeners","Map","get","newA","ws","onmessage","evt","forEach","cb","data","registerHandler","cv","send","HomeC","parsed","parse","$type","maybeName","users","find","user","senderId","undefined","messages","concat","sender","message","msg","getUsers","typedUsers","map","uploadingFile","newMessage","Box","p","newStuff","sendMessage","destinationUsers","index","TableRow","key","TableCell","align","_this3","nameField","newMessageField","classes","root","spacing","xs","Card","card","Typography","title","paddingTop","Divider","Table","TableHead","getTableRows","paddingLeft","paddingRight","accept","style","display","multiple","files","file","reader","FileReader","readAsArrayBuffer","onloadend","pe","result","ab","asByte","Int8Array","builder","push","jsonStructure","fileData","stringed","length","toString","htmlFor","Home","withStyles","theme","createStyles","flexGrow","paddingBottom","textAlign","marginTop","marginBottom","paper","App","jwt","createMuiTheme","palette","background","default","orange","LoggedInFrameC","logout","outerRoot","AppBar","position","appBar","Toolbar","toolbar","aria-label","drawer","Drawer","anchor","drawerPaper","ThemeProvider","GlobalTheme","List","ListItem","button","ListItemIcon","Home_default","ListItemText","primary","Settings_default","SupervisedUserCircle_default","content","child","defaultProps","LoggedInFrame","height","width","flexShrink","marginLeft","drawerWidth","marginRight","useStyles","makeStyles","input","padding","valueContainer","flexWrap","flex","alignItems","overflow","chip","chipFocused","backgroundColor","emphasize","grey","noOptionsMessage","singleValue","fontSize","placeholder","left","bottom","zIndex","right","divider","inputComponent","inputRef","objectWithoutProperties","assign","ref","components","Control","children","innerProps","innerRef","_props$selectProps","selectProps","TextFieldProps","InputProps","inputProps","objectSpread","Menu","Paper","square","MultiValue","Chip","tabIndex","clsx","defineProperty","isFocused","onDelete","removeProps","deleteIcon","Cancel_default","NoOptionsMessage","Option","MenuItem","selected","fontWeight","isSelected","Placeholder","_props$innerProps","SingleValue","ValueContainer","IntegrationReactSelect","useTheme","_React$useState","useState","_React$useState2","slicedToArray","single","setSingle","suggestions","choices","selectStyles","base","text","& input","font","NoSsr","react_select_browser_esm","styles","inputId","InputLabelProps","shrink","options","onSelect","maxMenuHeight","process","QueryableTableC","searchString","resultTable","isLoading","email","Promise","resolve","setTimeout","Date","now","toLocaleDateString","direction","justify","justifyContent","m","CircularProgress","topTableHead","TableBody","bottomTableHead","indexOuter","stringValue","emails","fetchByUser","renderConditionalTable","QueryableTable","SoogningC","loadRender","soogning_QueryableTable","endpoint","Soogning","EconomyC","startDate","endDate","chartData","dm874_jwt","names","datas","v","elems","_","dataIndex","nameIndex","index_esm","chartType","loader","hAxis","vAxis","series","0","curveType","1","2","rootProps","data-testid","MuiPickersUtilsProvider","utils","DateFnsUtils","DatePicker","disableToolbar","format","newDate","fetchByDate","renderChartConditionally","Economy","QueryEngineC","getBlacklistedField","getManualQueryField","selectedIndex","inputField","tableHead","tableBody","FormControl","formControl","InputLabel","Select","getDescription","conditionalComponent","entry","tableFromData","_this4","gutterBottom","_this5","_this6","currentTuple","Number","fetchQueryResult","QueryEngine","minWidth","AnalyticsC","analytics_Economy","analytics_QueryEngine","Analytics","SettingsC","isLoadingUsers","passwordChanged","passwordChanging","oldPassword","newPassword","showAddAsAdminButton","addAdminUser","admins","changePasswordMessage","disabled","changePassword","IconButton","Delete_default","removeAdmin","renderAddAdminButton","addAdmin","u","includes","filter","_this7","Settings","routing","react_router_dom","exact","path","render","WebSocket","HostString","global_LoggedInFrame","home_Home","soogning_Soogning","analytics_Analytics","settings_Settings","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6237db49.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\ninterface RegisterProps {\n}\n\ninterface RegisterState {\n    username: string | null;\n    password: string | null;\n    showDialogue: boolean;\n}\n\nexport default class Register extends React.Component<RegisterProps, RegisterState> {\n    constructor(props: RegisterProps) {\n        super(props);\n        this.state = {\n            username: null,\n            password: null,\n            showDialogue: false\n        };\n    }\n\n\n    public handleSubmit = (event: any) => {\n        axios.post(\"/register\", this.state).then((r) => {\n            console.log(r);\n        }).then((r) => {\n            this.setState({showDialogue: true});\n        });\n    };\n\n    public  render() {\n        return (\n            <div>\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline />\n                    <div className={\"papers\"}>\n                        <div className={\"form\"}>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"username\"\n                                label=\"Username\"\n                                name=\"username\"\n                                autoComplete=\"username\"\n                                autoFocus\n                                onChange={attr => this.setState({username: attr.target.value})}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                onChange={attr => this.setState({password: attr.target.value})}\n                            />\n                            <FormControlLabel\n                                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                                label=\"Remember me\"\n                            />\n                            <Button\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={\"submit\"}\n                                onClick={this.handleSubmit}\n                            >\n                                Sign Up\n                            </Button>\n                            <Grid container>\n                                <Grid item>\n                                    <Link component={RouterLink} to=\"/signin\" variant=\"body2\">\n                                        {\"Sign in\"}\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </div>\n                </Container>\n                <Dialog\n                    open={this.state.showDialogue}\n                    onClose={(x) => this.setState({showDialogue: false})}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"You have successfully registered.\"}</DialogTitle>\n                    <DialogActions>\n                        <Button onClick={(x) => this.setState({showDialogue: false})} color=\"primary\">\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\n","export default \"https://gr2-site.cloud.sdu.dk\"","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\nimport {Link as RouterLink, Redirect} from 'react-router-dom';\nimport '../index.css';\nimport Cookies from \"js-cookie\";\nimport ApiInterface from '../util/ApiInterface';\nimport HostString from \"../util/HostString\";\nimport AuthHost from \"../util/AuthHost\";\n\ninterface SignInProps {\n}\n\ninterface SignInState {\n    username: string | null;\n    password: string | null;\n    loginError: string | null;\n    loggedIn: boolean;\n}\n\ninterface RequestJsonBody {\n    username: string\n    password: string\n}\n\ninterface ResponseJson {\n    $type: string\n    payload: string\n}\n\nexport default class Signin extends React.Component<SignInProps, SignInState> {\n    constructor(props: SignInProps) {\n        super(props);\n        this.state = {\n            username: null,\n            password: null,\n            loginError: null,\n            loggedIn: false\n        };\n    }\n\n    private authenticate = async (requestBody: RequestJsonBody) => {\n        const host = AuthHost + \"/login\";\n\n        const additional = () => {\n            if (host.startsWith(\"localhost\")) {\n                return \"http://\";\n            } else {\n                return \"\";\n            }\n        };\n\n        let response = await fetch(additional() + host, {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: \"POST\",\n            body: JSON.stringify(requestBody)\n        }).then((e) => {\n            console.log(e.body)\n            return e\n        });\n\n        return await response.json();\n    };\n\n    public handleSubmit = (event: any) => {\n        const requestBody: RequestJsonBody = {\n            username: this.state.username as string,\n            password: this.state.password as string\n        };\n\n        this.authenticate(requestBody).then((responseJson: ResponseJson) => {\n            Cookies.set(\"dm874_jwt\", responseJson.payload);\n            this.setState({loggedIn: true});\n        });\n    };\n\n    public render() {\n\n        if (this.state.loggedIn) {\n            return <Redirect to={\"/home\"}/>;\n        }\n\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className={\"papers\"}>\n                    <div className={\"form\"}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"username\"\n                            label=\"Email\"\n                            name=\"username\"\n                            autoComplete=\"username\"\n                            autoFocus\n                            onChange={attr => this.setState({username: attr.target.value})}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            onChange={attr => this.setState({password: attr.target.value})}\n                        />\n                        <FormControlLabel\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\n                            label=\"Remember me\"\n                        />\n                        <Button\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={\"submit\"}\n                            onClick={this.handleSubmit}\n                        >\n                            Sign In\n                        </Button>\n                        <Grid container>\n                            <Grid item>\n                                <Link component={RouterLink} to=\"/register\" variant=\"body2\">\n                                    {\"Don't have an account? Sign Up\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </div>\n            </Container>\n        );\n    }\n}\n\n//export default withStyles(signinStyle, {withTheme: true})(Signin as any) as any;\n","\nclass GetSet {\n    a: WebSocket | null = null;\n    listeners: Map<number, (str: string) => void> = new Map();\n\n    get = () => {\n        return this.a;\n    };\n\n    set = (newA: () => WebSocket) => {\n        if (this.a === null) {\n            console.log(\"Creating new websocket\");\n\n            const ws = newA();\n\n            ws.onmessage = evt => {\n                this.listeners.forEach((cb) => cb(evt.data))\n            };\n\n            this.a = ws;\n        }\n    };\n\n    registerHandler = (id: number, cv: (str: string) => void) => {\n        this.listeners.set(id, cv);\n    };\n\n    send = (data: string) => {\n        if (this.a !== null) {\n            this.a.send(data);\n        }\n    };\n}\n\nexport default new GetSet();","import 'date-fns';\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport {Link as RouterLink, Redirect} from 'react-router-dom';\nimport '../index.css';\nimport {Box, createStyles, Theme, WithStyles} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport {Chart} from \"react-google-charts\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {withStyles} from \"@material-ui/styles\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Regnskab from \"./Regnskab\";\nimport Optaellinger from \"./Optaellinger\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Optaelling from \"./Optaelling\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport TableHead from \"@material-ui/core/TableHead\";\nimport Explore from \"@material-ui/core/SvgIcon/SvgIcon\";\nimport List from '@material-ui/core/List';\nimport ListItem, { ListItemProps } from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from \"@material-ui/core/Divider\";\nimport MaybeWebsocket from \"../util/MaybeWebsocket\";\nimport AuthHost from \"../util/AuthHost\";\n\nconst styles = (theme: Theme) => createStyles({\n    root: {\n        flexGrow: 1\n    },\n    card: {\n        paddingBottom: 50\n    },\n    title: {\n        textAlign: \"center\",\n        marginTop: 20,\n        marginBottom: 5\n    },\n    paper: {\n    }\n});\n\ninterface HomeProps extends WithStyles<typeof styles> {\n}\n\ninterface Message {\n    sender: string\n    message: string\n}\n\ninterface User {\n    id: number\n    name: string\n}\n\ninterface HomeState {\n    uploadingFile: boolean\n    name: string\n    newMessage: boolean\n    message: string\n    messages: Array<Message>\n    users: Array<User>\n}\n\nclass HomeC extends React.Component<HomeProps, HomeState> {\n    constructor(props: HomeProps) {\n        super(props);\n\n        MaybeWebsocket.registerHandler(0, (data) => {\n            try {\n                const parsed = JSON.parse(data)\n\n                if (parsed.$type === \"ReceiveMessage\") {\n                    const maybeName = this.state.users.find((user) => user.id == (parsed.senderId as number));\n\n                    const name = (() => {\n                        if (maybeName === undefined) {\n                            return \"Unknown\";\n                        } else {\n                            return maybeName.name;\n                        }\n                    })();\n\n\n                    this.setState({ messages: this.state.messages.concat([{ sender: name, message: parsed.msg as string }]) })\n                }\n            } catch (e) {\n\n            }\n        });\n\n        this.getUsers().then((users) => {\n           const typed = users as Array<[number, string]>;\n\n           const typedUsers = typed.map((user) => {\n              const typedUser: User = {id: user[0], name: user[1]};\n              return typedUser;\n           });\n\n           this.setState({users: typedUsers});\n        });\n\n        this.state = {\n            uploadingFile: false,\n            name: \"Test\",\n            newMessage: true,\n            message: \"\",\n            messages: [],\n            users: []\n        };\n    }\n\n    private async getUsers()  {\n        const host = AuthHost + \"/users\";\n\n        const additional = () => {\n            if (host.startsWith(\"localhost\")) {\n                return \"http://\";\n            } else {\n                return \"\";\n            }\n        };\n\n        let response = await fetch(additional() + host, {\n            method: \"GET\",\n        }).then((e) => {\n            return e\n        });\n\n        return await response.json();\n    };\n\n    public newMessageField(): React.ReactNode | null {\n        if (this.state.newMessage) {\n            return (\n                <Box margin={3}>\n                    <TextField id=\"outlined-basic\" label=\"New message\" variant=\"outlined\" fullWidth\n                               onChange={(e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => this.setState({ message: e.target.value})}\n                    />\n                    <Box p={1}/>\n                    <Button variant=\"contained\" color=\"primary\" fullWidth onClick={(e) => {\n                        const newStuff = this.state.messages.concat([{\n                            message: this.state.message,\n                            sender: \"You\"\n                        }]);\n\n                        this.setState({ messages: newStuff })\n\n                        const sendMessage = {\n                            $type: \"SendMessage\",\n                            message: this.state.message,\n                            destinationUsers: this.state.users.map((user) => user.id)\n                        };\n\n                        MaybeWebsocket.send(JSON.stringify(sendMessage))\n                    }}>\n                        Send\n                    </Button>\n                </Box>\n            );\n        } else {\n            return null;\n        }\n    };\n\n    public getTableRows(): Array<React.ReactNode> {\n        return (this.state.messages.map((value: Message, index: number) => {\n            return (<TableRow key={index}>\n                <TableCell align=\"left\">{value.sender}</TableCell>\n                <TableCell align=\"left\">{value.message}</TableCell>\n            </TableRow>);\n        }));\n    };\n\n    public render() {\n        const nameField = this.newMessageField();\n\n        return (\n            <div className={this.props.classes.root}>\n                <Grid container spacing={5}>\n                    <Grid item xs={12}>\n                        <Card className={this.props.classes.card}>\n                            <Typography\n                                variant={\"h4\"}\n                                className={this.props.classes.title}\n                            >\n                                Chat\n                            </Typography>\n                            <Box paddingTop={2}/>\n                            <Divider/>\n                            <Box paddingTop={4}/>\n                            <Container maxWidth={\"xl\"}>\n                                <Grid container spacing={2}>\n                                    <Grid item xs={12}>\n                                        <Box paddingTop={1}/>\n                                        <Card>\n                                            <Table>\n                                                <TableHead>\n                                                    <TableRow>\n                                                        <TableCell align=\"left\">Name</TableCell>\n                                                        <TableCell align=\"left\">Message</TableCell>\n                                                    </TableRow>\n                                                </TableHead>\n                                                {this.getTableRows()}\n                                            </Table>\n                                            {nameField}\n\n                                        </Card>\n                                    </Grid>\n                                </Grid>\n                            </Container>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Card className={this.props.classes.card}>\n                            <Typography\n                                variant={\"h4\"}\n                                className={this.props.classes.title}\n                            >\n                                Upload file\n                            </Typography>\n                            <Box paddingTop={2}/>\n                            <Divider/>\n                            <Box paddingTop={4}/>\n                            <Box paddingLeft={4} paddingRight={4}>\n                                <input\n                                    accept=\"image/*\"\n                                    className={\"submit\"}\n                                    style={{ display: 'none' }}\n                                    id=\"raised-button-file\"\n                                    multiple\n                                    type=\"file\"\n                                    onChange={ (e) => {\n                                        const files = e.target.files;\n\n                                        if (files !== null) {\n                                            this.setState({ uploadingFile: true });\n\n                                            const file = files.item(0);\n\n                                            if (file !== null) {\n\n                                                var reader = new FileReader();\n                                                reader.readAsArrayBuffer(file)\n                                                reader.onloadend = (pe) => {\n                                                    if (reader.result !== null) {\n                                                        console.log(\"abc\");\n                                                        const ab = reader.result as ArrayBuffer;\n\n                                                        const asByte = new Int8Array(ab);\n\n                                                        const builder: Array<number> = [];\n\n                                                        asByte.forEach((value) => {\n                                                            builder.push(value)\n                                                        });\n\n                                                        //&const data = JSON.stringify(asByte);\n\n                                                        const jsonStructure = {\n                                                            $type: \"UploadHandlerSnippet\",\n                                                            fileData: builder\n                                                        };\n\n                                                        const stringed = JSON.stringify(jsonStructure);\n\n                                                        console.log(\"Sending with \" + builder.length.toString());\n\n                                                        MaybeWebsocket.send(stringed)\n                                                    }\n                                                }\n\n                                            } else {\n                                                this.setState({ uploadingFile: false });\n                                            }\n                                        }\n                                    }}\n                                />\n                                <label htmlFor=\"raised-button-file\">\n                                    <Button variant=\"contained\" component=\"span\" className={\"submit\"} fullWidth color=\"primary\">\n                                        Upload\n                                    </Button>\n                                </label>\n                            </Box>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nconst Home = withStyles(styles)(HomeC);\n\nexport default Home;","import React from 'react';\nimport './App.css';\nimport Signin from \"./signin/Signin\";\nimport {Redirect} from \"react-router\";\nimport * as Cookies from \"js-cookie\";\nimport MaybeWebsocket from \"./util/MaybeWebsocket\";\nimport HostString from \"./util/HostString\";\n\nconst App: React.FC = () => {\n    const jwt = Cookies.get('dm874_jwt');\n\n    if (jwt !== undefined && jwt.length !== 0) {\n        return (\n            <Redirect to={\"/home\"}/>\n        );\n    } else {\n        return (\n            <Redirect to={\"/signin\"}/>\n        );\n    }\n};\n\nexport default App;\n","import {\n    createMuiTheme\n} from '@material-ui/core/styles';\nimport { green, orange } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n    palette: {\n        background: {\n            default: orange[500],\n            paper: orange[500]\n        }\n    }\n});\n\nexport default theme;","import React from 'react';\nimport HomeIcon from '@material-ui/icons/Home';\nimport Settings from '@material-ui/icons/Settings';\nimport Analytics from '@material-ui/icons/GraphicEq';\nimport MetricsIcon from '@material-ui/icons/NetworkWifi';\nimport Explore from '@material-ui/icons/Explore';\nimport LogoutIcon from '@material-ui/icons/SupervisedUserCircle';\nimport { Link as RouterLink } from 'react-router-dom';\nimport * as Cookies from \"js-cookie\";\nimport { Paper, Grid, Box} from '@material-ui/core';\nimport { withStyles, ThemeProvider } from '@material-ui/styles';\nimport GlobalTheme from './GlobalTheme';\nimport { makeStyles, useTheme, Theme, createStyles, WithStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MaybeWebsocket from \"../util/MaybeWebsocket\";\n\nconst drawerWidth = 300;\nconst appBarHeight = 65;\nconst defaultSideMargin = 40;\n\nconst styles = (theme: Theme) => createStyles({\n    outerRoot: {\n    },\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        //marginLeft: drawerWidth,\n        height: appBarHeight,\n    },\n    toolbar: {\n        textAlign: \"center\",\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        marginTop: appBarHeight,\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n        marginLeft: drawerWidth + defaultSideMargin,\n        marginTop: appBarHeight,\n        marginRight: defaultSideMargin,\n    },\n});\n\ninterface LoggedInFrameProps extends WithStyles<typeof styles> {\n    child: React.ReactNode | undefined;\n}\n\ninterface LoggedInFrameState {\n}\n\nclass LoggedInFrameC extends React.Component<LoggedInFrameProps, LoggedInFrameState> {\n    constructor(props: LoggedInFrameProps) {\n        super(props);\n        this.state = {\n\n        };\n    }\n    public static defaultProps:Partial<LoggedInFrameProps> = {\n        child: undefined\n    };\n\n    logout = () => {\n        Cookies.remove(\"dm874_jwt\");\n    };\n\n    public render() {\n        return (\n            <div className={this.props.classes.outerRoot}>\n                <AppBar position=\"sticky\" className={this.props.classes.appBar}>\n                    <Toolbar className={this.props.classes.toolbar}>\n                        <Typography color=\"inherit\" aria-label=\"Menu\" align={\"center\"}>\n                            DM874-chat\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <nav className={this.props.classes.drawer}>\n                    <Drawer\n                        variant=\"permanent\"\n                        anchor=\"left\"\n                        classes={{\n                            paper: this.props.classes.drawerPaper\n                        }}\n                    >\n                            <ThemeProvider theme={GlobalTheme} >\n                                <Divider />\n                                <List>\n                                    <ListItem button key={\"Home\"} component={RouterLink} to=\"/home\" >\n                                        <ListItemIcon>{<HomeIcon color=\"primary\" />}</ListItemIcon>\n                                        <ListItemText primary={<Typography variant=\"body1\" align='justify'>Home</Typography>} />\n                                    </ListItem>\n                                    <ListItem button key={\"Settings\"} component={RouterLink} to=\"/settings\" >\n                                        <ListItemIcon>{<Settings color=\"primary\" />}</ListItemIcon>\n                                        <ListItemText primary={<Typography variant=\"body1\" align='justify'>Instillinger</Typography>} />\n                                    </ListItem>\n                                </List>\n                                <Divider />\n                                <List>\n                                    <ListItem button key={\"Logout\"} onClick={this.logout} component={RouterLink} to=\"/\" >\n                                        <ListItemIcon>{<LogoutIcon color=\"primary\" />}</ListItemIcon>\n                                        <ListItemText primary={<Typography variant=\"body1\" align='justify'>Log ud</Typography>} />\n                                    </ListItem>\n                                </List>\n                            </ThemeProvider>\n                    </Drawer>\n                </nav>\n                <div className={this.props.classes.content}>\n                    {this.props.child}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst LoggedInFrame = withStyles(styles)(LoggedInFrameC);\n\nexport default LoggedInFrame;","import React, { CSSProperties, HTMLAttributes } from 'react';\nimport clsx from 'clsx';\nimport Select from 'react-select';\nimport { createStyles, emphasize, makeStyles, useTheme, Theme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport TextField, { BaseTextFieldProps } from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { ValueContainerProps } from 'react-select/src/components/containers';\nimport { ControlProps } from 'react-select/src/components/Control';\nimport { MenuProps, NoticeProps } from 'react-select/src/components/Menu';\nimport { MultiValueProps } from 'react-select/src/components/MultiValue';\nimport { OptionProps } from 'react-select/src/components/Option';\nimport { PlaceholderProps } from 'react-select/src/components/Placeholder';\nimport { SingleValueProps } from 'react-select/src/components/SingleValue';\nimport { ValueType } from 'react-select/src/types';\nimport { Omit } from '@material-ui/types';\n\ninterface OptionType {\n    label: string;\n    value: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        input: {\n            display: 'flex',\n            padding: 0,\n            height: 'auto',\n        },\n        valueContainer: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            flex: 1,\n            alignItems: 'center',\n            overflow: 'hidden',\n        },\n        chip: {\n            margin: theme.spacing(0.5, 0.25),\n        },\n        chipFocused: {\n            backgroundColor: emphasize(\n                theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\n                0.08,\n            ),\n        },\n        noOptionsMessage: {\n            padding: theme.spacing(1, 2),\n        },\n        singleValue: {\n            fontSize: 16,\n        },\n        placeholder: {\n            position: 'absolute',\n            left: 2,\n            bottom: 6,\n            fontSize: 16,\n        },\n        paper: {\n            position: 'absolute',\n            zIndex: 1,\n            marginTop: theme.spacing(1),\n            left: 0,\n            right: 0,\n        },\n        divider: {\n            height: theme.spacing(1),\n        },\n    }),\n);\n\nfunction NoOptionsMessage(props: NoticeProps<OptionType>) {\n    return (\n        <Typography\n            color=\"textSecondary\"\n            className={props.selectProps.classes.noOptionsMessage}\n            {...props.innerProps}\n        >\n            {props.children}\n        </Typography>\n    );\n}\n\ntype InputComponentProps = Pick<BaseTextFieldProps, 'inputRef'> & HTMLAttributes<HTMLDivElement>;\n\nfunction inputComponent({ inputRef, ...props }: InputComponentProps) {\n    return <div ref={inputRef} {...props} />;\n}\n\nfunction Control(props: ControlProps<OptionType>) {\n    const {\n        children,\n        innerProps,\n        innerRef,\n        selectProps: { classes, TextFieldProps },\n    } = props;\n\n    return (\n        <TextField\n            fullWidth\n            InputProps={{\n                inputComponent,\n                inputProps: {\n                    className: classes.input,\n                    ref: innerRef,\n                    children,\n                    ...innerProps,\n                },\n            }}\n            {...TextFieldProps}\n        />\n    );\n}\n\nfunction Option(props: OptionProps<OptionType>) {\n    return (\n        <MenuItem\n            ref={props.innerRef}\n            selected={props.isFocused}\n            component=\"div\"\n            style={{\n                fontWeight: props.isSelected ? 500 : 400,\n            }}\n            {...props.innerProps}\n        >\n            {props.children}\n        </MenuItem>\n    );\n}\n\ntype MuiPlaceholderProps = Omit<PlaceholderProps<OptionType>, 'innerProps'> &\n    Partial<Pick<PlaceholderProps<OptionType>, 'innerProps'>>;\nfunction Placeholder(props: MuiPlaceholderProps) {\n    const { selectProps, innerProps = {}, children } = props;\n    return (\n        <Typography color=\"textSecondary\" className={selectProps.classes.placeholder} {...innerProps}>\n            {children}\n        </Typography>\n    );\n}\n\nfunction SingleValue(props: SingleValueProps<OptionType>) {\n    return (\n        <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\n            {props.children}\n        </Typography>\n    );\n}\n\nfunction ValueContainer(props: ValueContainerProps<OptionType>) {\n    return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\n}\n\nfunction MultiValue(props: MultiValueProps<OptionType>) {\n    return (\n        <Chip\n            tabIndex={-1}\n            label={props.children}\n            className={clsx(props.selectProps.classes.chip, {\n                [props.selectProps.classes.chipFocused]: props.isFocused,\n            })}\n            onDelete={props.removeProps.onClick}\n            deleteIcon={<CancelIcon {...props.removeProps} />}\n        />\n    );\n}\n\nfunction Menu(props: MenuProps<OptionType>) {\n    return (\n        <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\n            {props.children}\n        </Paper>\n    );\n}\n\nconst components = {\n    Control,\n    Menu,\n    MultiValue,\n    NoOptionsMessage,\n    Option,\n    Placeholder,\n    SingleValue,\n    ValueContainer,\n};\n\ninterface IntegrationReactSelectProps {\n    label: string\n    choices: Array<string>\n    onSelect: ((arg0: string) => void)\n}\n\nexport default function IntegrationReactSelect(props: IntegrationReactSelectProps) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [single, setSingle] = React.useState<ValueType<OptionType>>(null);\n\n    const suggestions: OptionType[] = props.choices.map((e: string) => ({\n        value: e,\n        label: e\n    }));\n\n    function handleChangeSingle(value: ValueType<OptionType>) {\n        props.onSelect((value as OptionType).value);\n        setSingle(value);\n    }\n\n    const selectStyles = {\n        input: (base: CSSProperties) => ({\n            ...base,\n            color: theme.palette.text.primary,\n            '& input': {\n                font: 'inherit',\n            },\n        }),\n    };\n\n    return (\n        <div className={classes.root}>\n            <NoSsr>\n                <Select\n                    classes={classes}\n                    styles={selectStyles}\n                    inputId=\"react-select-single\"\n                    TextFieldProps={{\n                        label: props.label,\n                        InputLabelProps: {\n                            htmlFor: 'react-select-single',\n                            shrink: true,\n                        },\n                    }}\n                    placeholder={\"Select\"}\n                    options={suggestions}\n                    components={components}\n                    value={single}\n                    onChange={handleChangeSingle}\n                    maxMenuHeight={150}\n                />\n                <div className={classes.divider} />\n            </NoSsr>\n        </div>\n    );\n}","export default (process.env.NODE_ENV === \"production\") ? \"https://gr2-site.cloud.sdu.dk\" : \"localhost:9000\";","import 'date-fns';\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\nimport {Link as RouterLink, Redirect} from 'react-router-dom';\nimport '../index.css';\nimport {Box, createStyles, Theme, WithStyles} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport {Chart} from \"react-google-charts\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {withStyles} from \"@material-ui/styles\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport SearchSelector from '../util/SearchSelector';\nimport * as Cookies from \"js-cookie\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport HostString from \"../util/HostString\";\nimport RunMode from \"../util/RunMode\";\nimport ApiInterface from \"../util/ApiInterface\";\n\nconst styles = (theme: Theme) => createStyles({\n    root: {\n        padding: 5,\n        paddingLeft: 10,\n        paddingRight: 10,\n    },\n    card: {\n        paddingBottom: 50\n    },\n    title: {\n        textAlign: \"center\",\n        marginTop: 20,\n        marginBottom: 5\n    },\n    input: {\n        flex: 1\n    }\n});\n\ntype TableUserDescriptionData = Array<string>\ntype TableUserBodyData = Array<Array<string>>\n\ninterface QueryableTableProps extends WithStyles<typeof styles> {\n    endpoint: string\n    emails: Array<string>\n\n    topTableHead: Array<string>\n    bottomTableHead: Array<string>\n}\n\ninterface QueryableTableState {\n    searchString: string\n    resultTable: [TableUserDescriptionData, TableUserBodyData]\n    isLoading: boolean\n}\n\ninterface RequestJsonBody {\n    email: string\n}\n\ninterface ResponseJson {\n    resultTable: [TableUserDescriptionData, TableUserBodyData]\n}\n\nclass QueryableTableC extends React.Component<QueryableTableProps, QueryableTableState> {\n    constructor(props: QueryableTableProps) {\n        super(props);\n        this.state = {\n            searchString: '',\n            resultTable: [[],[]],\n            isLoading: false\n        };\n    }\n\n    private fetchByUser(email: string): void {\n        const host = HostString;\n\n        if (RunMode == \"WithServer\") {\n            const requestBody: RequestJsonBody = {\n                email: email\n            };\n\n            ApiInterface.postAuthenticated<ResponseJson, RequestJsonBody>(\"/admin/\" + this.props.endpoint, requestBody, host).then((responseJson: ResponseJson) => {\n                this.setState({\n                    resultTable: responseJson.resultTable,\n                    isLoading: false\n                });\n            });\n        } else {\n            new Promise( resolve => setTimeout(resolve, 1000) ).then((value: unknown) => {\n                this.setState({\n                    resultTable: [\n                        [\"Valdemar Grange\", \"sagra16\", \"-114\", \"Indbetaling: kr. 100 via MobilePay, 24-04-2019 09:34\"],\n                        [\n                            [(new Date(Date.now())).toLocaleDateString(), \"42\" ,\"55\", \"Indbetaling: kr. 100 via MobilePay, 24-04-2019 09:34\"],\n                            [(new Date(Date.now())).toLocaleDateString(), \"66\" ,\"102\", \"Indbetaling: kr. 100 via MobilePay, 24-04-2019 09:34\"]\n                        ]\n                    ],\n                    isLoading: false\n                });\n            });\n        }\n    }\n\n    public renderConditionalTable(): React.ReactNode | null {\n        if (!this.state.isLoading) {\n            return (\n                <div>\n                    <Box paddingTop={4} />\n                    <Table>\n                    <TableHead>\n                        <TableRow>\n                            {(this.props.topTableHead).map((value: string, index: number) => {\n                                return (<TableCell align=\"left\" key={index}>{value}</TableCell>)\n                            })}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        <TableRow>\n                            {(this.state.resultTable[0]).map((value: string, index: number) => {\n                                return (<TableCell align=\"left\" key={index}>{value}</TableCell>)\n                            })}\n                        </TableRow>\n                    </TableBody>\n                    <TableHead>\n                        <TableRow>\n                            {(this.props.bottomTableHead).map((value: string, index: number) => {\n                                return (<TableCell align=\"left\" key={index}>{value}</TableCell>)\n                            })}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {(this.state.resultTable[1]).map((value: Array<string>, indexOuter: number) => {\n                            return (<TableRow key={indexOuter}>{value.map((stringValue: string, index: number) => {\n                                return (<TableCell align=\"left\" key={index}>{stringValue}</TableCell>)\n                            })}</TableRow>);\n                        })}\n                    </TableBody>\n                </Table>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                    >\n                        <Box justifyContent=\"center\" m={2}>\n                            <CircularProgress/>\n                        </Box>\n                    </Grid>\n                    <Box paddingBottom={5}/>\n                </div>\n            );\n        }\n    }\n\n    public render() {\n        return (\n            <div>\n                <Box paddingBottom={3} />\n                <Paper className={this.props.classes.root}>\n                    <SearchSelector\n                        label={\"Brugernavn\"}\n                        choices={this.props.emails}\n                        onSelect={(e: string) => {\n                            this.setState({\n                                isLoading: true,\n                            });\n                            this.fetchByUser(e);\n                        }}\n                    />\n                </Paper>\n                {this.renderConditionalTable()}\n                <Box paddingBottom={10}/>\n            </div>\n        );\n    }\n}\n\nconst QueryableTable = withStyles(styles)(QueryableTableC);\n\nexport default QueryableTable;","import 'date-fns';\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\nimport {Link as RouterLink, Redirect} from 'react-router-dom';\nimport '../index.css';\nimport {Box, createStyles, Theme, WithStyles} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport {Chart} from \"react-google-charts\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {withStyles} from \"@material-ui/styles\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport QueryableTable from \"./QueryableTable\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport HostString from \"../util/HostString\";\nimport RunMode from \"../util/RunMode\";\nimport ApiInterface from \"../util/ApiInterface\";\n\nconst styles = (theme: Theme) => createStyles({\n    root: {\n        flexGrow: 1\n    },\n    card: {\n        paddingBottom: 50\n    },\n    title: {\n        textAlign: \"center\",\n        marginTop: 20,\n        marginBottom: 5\n    },\n});\n\ninterface SoogningProps extends WithStyles<typeof styles> {\n}\n\ninterface SoogningState {\n    isLoading: boolean\n\n    emails: Array<string>\n}\n\nclass SoogningC extends React.Component<SoogningProps, SoogningState> {\n    constructor(props: SoogningProps) {\n        super(props);\n        this.state = {\n            isLoading: false,\n            emails: []\n        };\n    }\n\n    private loadRender(): React.ReactNode {\n        return (\n            <div>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Box justifyContent=\"center\" m={2}>\n                        <CircularProgress/>\n                    </Box>\n                </Grid>\n                <Box paddingBottom={5}/>\n            </div>\n        );\n    }\n\n    public componentDidMount(): void {\n        const host = HostString;\n\n        if (RunMode == \"WithServer\") {\n            ApiInterface.allEmails(host).then((responseJson) => {\n                this.setState({\n                    isLoading: false,\n                    emails: responseJson.emails\n                })\n            });\n        } else {\n            new Promise( resolve => setTimeout(resolve, 1000) ).then((value: unknown) => {\n                this.setState({\n                    isLoading: false,\n                    emails: [\"sagra16\", \"anmor16\", \"mkris16\", \"gajen16\"]\n                });\n            })\n\n        }\n    }\n\n    public render() {\n        return (\n            <div className={this.props.classes.root}>\n                <Grid container spacing={5}>\n                    <Grid item xs={6}>\n                        <Card className={this.props.classes.card}>\n                            <Typography\n                                variant={\"h4\"}\n                                className={this.props.classes.title}\n                            >\n                                Køb\n                            </Typography>\n                            <Container maxWidth={\"lg\"}>\n                                {(this.state.isLoading) ? this.loadRender() :\n                                    <QueryableTable\n                                        endpoint={\"purchases\"}\n                                        emails={this.state.emails}\n                                        topTableHead={[\"Navn\", \"Email\", \"Saldo\"]}\n                                        bottomTableHead={[\"Dato\", \"Total beløb\", \"Type\", \"Status\", \"Købs metode\", \"Antal\"]}\n                                    />\n                                }\n                            </Container>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Card className={this.props.classes.card}>\n                            <Typography\n                                variant={\"h4\"}\n                                className={this.props.classes.title}\n                            >\n                                Indbetalinger\n                            </Typography>\n                            <Container maxWidth={\"lg\"}>\n                                {(this.state.isLoading) ? this.loadRender() :\n                                    <QueryableTable\n                                        endpoint={\"transactions\"}\n                                        emails={this.state.emails}\n                                        topTableHead={[\"Navn\", \"Email\", \"Saldo\"]}\n                                        bottomTableHead={[\"Dato\", \"Beløb\", \"Status\", \"Type\"]}\n                                    />\n                                }\n                            </Container>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nconst Soogning = withStyles(styles)(SoogningC);\n\nexport default Soogning;","import 'date-fns';\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\nimport {Link as RouterLink, Redirect} from 'react-router-dom';\nimport '../index.css';\nimport {Box, createStyles, Theme, WithStyles} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport {Chart} from \"react-google-charts\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {withStyles} from \"@material-ui/styles\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker, DatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport * as Cookies from \"js-cookie\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst styles = (theme: Theme) => createStyles({\n    root: {\n        flexGrow: 1\n    },\n    card: {\n        paddingBottom: 50\n    },\n    title: {\n        textAlign: \"center\",\n        marginTop: 20,\n        marginBottom: 5\n    },\n});\n\ninterface EconomyProps extends WithStyles<typeof styles> {\n}\n\ninterface EconomyState {\n    startDate: Date | null\n    endDate: Date | null\n\n    chartData: ChartData\n    isLoading: boolean\n}\n\ntype ChartData = Array<[string, Array<number>]>\n\ninterface RequestJsonBody {\n    startDate: string\n    endDate: string\n}\n\ninterface ResponseJson {\n    chartData: ChartData\n}\n\nclass EconomyC extends React.Component<EconomyProps, EconomyState> {\n    constructor(props: EconomyProps) {\n        super(props);\n        this.state = {\n            startDate: new Date(Date.now()),\n            endDate: new Date(Date.now()),\n\n            chartData: [],\n\n            isLoading: false\n        };\n    }\n\n    private fetchByDate(): void {\n        if (process.env.NODE_ENV === \"production\") {\n            const host = window.location.host;\n            const jwt = Cookies.get('dm874_jwt') as string;\n\n            const requestBody: RequestJsonBody = {\n                startDate: (this.state.startDate as Date).toLocaleDateString(),\n                endDate: (this.state.endDate as Date).toLocaleDateString()\n            };\n\n            fetch(host + \"/admin/economy\", {\n                headers : {\n                    \"dm874_jwt\": jwt\n                },\n                method: \"post\",\n                body: JSON.stringify(requestBody)\n            })\n                .then((response) => response.json())\n                .then((data: ResponseJson) => {\n                    this.setState({\n                        chartData: data.chartData,\n                        isLoading: false\n                    });\n                })\n        } else {\n            new Promise( resolve => setTimeout(resolve, 1000) ).then((value: unknown) => {\n                this.setState({\n                    chartData: [\n                        ['Indtægter', [0,10,23,17,18,9,11,27,33,40,32,35]],\n                        ['Overskud', [0,20,40,60,99,120,159,229,238,268,303,373]],\n                        ['Køb', [20,10,15,9,10,13,9,48,20,18,13,17]]\n                    ],\n                    isLoading: false\n                });\n            });\n        }\n    }\n\n    private renderChartConditionally(): React.ReactNode | null {\n        if (this.state.isLoading) {\n            return (\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Box justifyContent=\"center\" m={2}>\n                        <CircularProgress/>\n                    </Box>\n                </Grid>\n            );\n        } else if (this.state.chartData.length === 0) {\n            return null;\n        } else {\n            const names: Array<string> = this.state.chartData.map(value => value[0]);\n            const datas: Array<Array<number>> = this.state.chartData.map(v => v[1]);\n\n            //For data entry for an arbitary type we transpose the matrix\n            const elems = ((datas[0]).map((_, dataIndex: number) => {\n                return [dataIndex].concat(names.map((_, nameIndex: number) => {\n                    return (datas[nameIndex][dataIndex]);\n                }));\n            }));\n\n            console.log(elems);\n\n            const empty: Array<any> = [];\n\n            return (\n                <Chart\n                    height={'400px'}\n                    chartType=\"LineChart\"\n                    loader={<div>Loading Chart</div>}\n                    data={empty.concat([\n                        ['x'].concat(names)\n                    ]).concat(elems)}\n                    options={{\n                        hAxis: {\n                            title: 'Dato',\n                        },\n                        vAxis: {\n                            title: 'Sum',\n                        },\n                        series: {\n                            0: { curveType: 'function' },\n                            1: { curveType: 'function' },\n                            2: { curveType: 'function' },\n                        },\n                    }}\n                    rootProps={{ 'data-testid': '1' }}\n                />\n            );\n        }\n    }\n\n    public render() {\n        return (\n            <div>\n                <Box paddingBottom={2} />\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"space-between\"\n                    alignItems=\"center\"\n                >\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DatePicker\n                            disableToolbar\n                            variant=\"inline\"\n                            format=\"MM/dd/yyyy\"\n                            margin=\"normal\"\n                            id=\"date-picker-inline\"\n                            label=\"Start dato\"\n                            value={this.state.startDate}\n                            onChange={(newDate: Date | null) => {\n                                if (newDate !== null && this.state.endDate) {\n                                    this.setState({ startDate: newDate, isLoading: true});\n                                    this.fetchByDate();\n                                } else {\n                                    this.setState({ startDate: newDate});\n                                }\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <DatePicker\n                            disableToolbar\n                            variant=\"inline\"\n                            format=\"MM/dd/yyyy\"\n                            margin=\"normal\"\n                            id=\"date-picker-inline\"\n                            label=\"Slut dato\"\n                            value={this.state.endDate}\n                            onChange={(newDate: Date | null) => {\n                                if (newDate !== null && this.state.startDate) {\n                                    this.setState({ endDate: newDate, isLoading: true});\n                                    this.fetchByDate();\n                                } else {\n                                    this.setState({ endDate: newDate});\n                                }\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n                {this.renderChartConditionally()}\n            </div>\n        );\n    }\n}\n\n\nconst Economy = withStyles(styles)(EconomyC);\n\nexport default Economy;\n\n","import 'date-fns';\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\nimport {Link as RouterLink, Redirect} from 'react-router-dom';\nimport '../index.css';\nimport {Box, createStyles, Theme, WithStyles} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport {Chart} from \"react-google-charts\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {withStyles} from \"@material-ui/styles\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Economy from \"./Economy\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport { ValueContainerProps } from 'react-select/src/components/containers';\nimport { ControlProps } from 'react-select/src/components/Control';\nimport { MenuProps, NoticeProps } from 'react-select/src/components/Menu';\nimport { MultiValueProps } from 'react-select/src/components/MultiValue';\nimport { OptionProps } from 'react-select/src/components/Option';\nimport { PlaceholderProps } from 'react-select/src/components/Placeholder';\nimport { SingleValueProps } from 'react-select/src/components/SingleValue';\nimport { ValueType } from 'react-select/src/types';\nimport ReactSelect from 'react-select';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport * as Cookies from \"js-cookie\";\nimport HostString from \"../util/HostString\";\nimport RunMode from \"../util/RunMode\";\nimport ApiInterface from \"../util/ApiInterface\";\n\nconst styles = (theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap'\n    },\n    card: {\n        paddingBottom: 50\n    },\n    formControl: {\n        minWidth: 200\n    },\n    title: {\n        textAlign: \"center\",\n        marginTop: 20,\n        marginBottom: 5\n    },\n});\n\ninterface QueryEngineProps extends WithStyles<typeof styles> {\n}\n\ntype TableHeadData = Array<string>\ntype TableBodyData = Array<Array<string>>\n\ninterface QueryEngineState {\n    selectedIndex: string\n    inputField: string\n\n    isLoading: boolean\n\n    tableHead: TableHeadData | null\n    tableBody: TableBodyData | null\n}\n\ninterface RequestJsonBody {\n    requestData: string\n}\n\ninterface ResponseJson {\n    tableHead: TableHeadData\n    tableBody: TableBodyData\n}\n\nclass QueryEngineC extends React.Component<QueryEngineProps, QueryEngineState> {\n    constructor(props: QueryEngineProps) {\n        super(props);\n        this.state = {\n            selectedIndex: '',\n            inputField: \"\",\n\n            isLoading: false,\n\n            tableHead: null,\n            tableBody: null\n        };\n    }\n\n    private elems: Array<[string, string, React.ReactNode]> = [\n        [\"Blacklisted people\", \"/admin/query/blacklisted\", this.getBlacklistedField()],\n        [\"Query on 'Transactions'\", \"/admin/query/transactions\", this.getManualQueryField()]\n    ];\n\n    private fetchQueryResult(endpoint: string): void {\n\n        const host = HostString;\n\n        if (RunMode == \"WithServer\") {\n            const requestBody: RequestJsonBody = {\n                requestData: this.state.inputField\n            };\n\n            ApiInterface.postAuthenticated<ResponseJson, RequestJsonBody>(endpoint, requestBody, host).then((responseJson: ResponseJson) => {\n                this.setState({\n                    tableHead: responseJson.tableHead,\n                    tableBody: responseJson.tableBody,\n                    isLoading: false\n                });\n            });\n        } else {\n            const tableHead: TableHeadData = [\n                \"First col\", \"Second col\", \"Third col\"\n            ];\n\n            const tableBody: TableBodyData = [\n                [\"11\", \"12\", \"13\"],\n                [\"21\", \"22\", \"23\"],\n                [\"31\", \"32\", \"33\"]\n            ];\n\n            new Promise( resolve => setTimeout(resolve, 1000) ).then((value: unknown) => {\n                this.setState({\n                    tableHead: tableHead,\n                    tableBody: tableBody,\n                    isLoading: false\n                });\n            });\n        }\n\n    }\n\n    public render() {\n        return (\n            <div>\n                <Box paddingTop={4}/>\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <form className={this.props.classes.root} autoComplete=\"off\">\n                        <FormControl className={this.props.classes.formControl}>\n                            <InputLabel htmlFor=\"query\">Type</InputLabel>\n                            <Select\n                                value={this.state.selectedIndex}\n                                onChange={(event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n                                    this.setState({\n                                        selectedIndex : event.target.value as string,\n                                        inputField: \"\",\n                                        tableHead: null,\n                                        tableBody: null\n                                    })\n                                }}\n                                inputProps={{\n                                    name: 'query',\n                                    id: 'query',\n                                }}\n                            >\n                                {this.elems.map((e: [string, string, React.ReactNode], index: number) => <MenuItem value={index + 1} key={index}>{e[0]}</MenuItem>)}\n                            </Select>\n                        </FormControl>\n                    </form>\n                </Grid>\n                <Box paddingTop={3} />\n                {this.getDescription()}\n                {this.conditionalComponent()}\n            </div>\n        );\n    }\n\n    private tableFromData(tableHead: TableHeadData, tableBody: TableBodyData): React.ReactNode {\n        return (\n          <div>\n              <Box paddingBottom={4}/>\n              <Table>\n                  <TableHead>\n                      <TableRow>\n                          {tableHead.map((entry: string, index: number) => <TableCell key={index}>{entry}</TableCell>)}\n                      </TableRow>\n                  </TableHead>\n                  <TableHead>\n                      {tableBody.map((entry: Array<string>) => {\n                          return <TableRow>\n                              {entry.map((entry: string) => <TableCell>{entry}</TableCell>)}\n                          </TableRow>;\n                      })}\n                  </TableHead>\n              </Table>\n          </div>\n        );\n    }\n\n    private conditionalComponent(): React.ReactNode | null {\n        if (this.state.isLoading) {\n            return (\n                <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Box justifyContent=\"center\" m={2}>\n                        <CircularProgress/>\n                    </Box>\n                </Grid>\n            );\n        } else {\n            if (this.state.tableBody === null || this.state.tableHead === null) {\n                return null;\n            } else {\n                return(\n                    <Container maxWidth={\"lg\"}>\n                        {this.tableFromData(this.state.tableHead, this.state.tableBody)}\n                    </Container>\n                );\n            }\n        }\n    }\n\n    private getManualQueryField(): React.ReactNode {\n        return (\n            <div>\n                <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                        Predicate to apply to query \"SELECT * FROM transactions WHERE 'YOUR_PREDICATE';\"\n                    </Typography>\n                </Grid>\n                <Box paddingTop={1} />\n                <TextField\n                    key=\"getManualQueryField\"\n                    id=\"getManualQueryField\"\n                    label=\"Predicate\"\n                    fullWidth={true}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => this.setState({ inputField: e.target.value})}\n                />\n                <Box paddingTop={4} />\n            </div>\n        );\n    }\n\n    private getBlacklistedField(): React.ReactNode {\n        return (\n            <div>\n                <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                        People whose balance meets the condition n >= are shown\n                    </Typography>\n                </Grid>\n                <Box paddingTop={1} />\n                <TextField\n                    key=\"getBlacklistedField\"\n                    id=\"getBlacklistedField\"\n                    label=\"Condition\"\n                    fullWidth={true}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => this.setState({ inputField: e.target.value})}\n                />\n                <Box paddingTop={4} />\n            </div>\n        );\n    }\n\n    private getDescription(): React.ReactNode | null {\n        if (this.state.selectedIndex === '') {\n            return null;\n        } else {\n            const currentTuple = this.elems[Number(this.state.selectedIndex) - 1];\n\n            if (currentTuple) {\n                const result = currentTuple[2];\n\n                return (\n                    <div>\n                        {result}\n                        <Button variant=\"contained\" color=\"primary\" fullWidth={true} onClick={(() => {\n                            this.setState({isLoading: true})\n                            this.fetchQueryResult(currentTuple[1])\n                        })}>\n                            Query\n                        </Button>\n                    </div>\n                );\n            } else {\n                return null;\n            }\n        }\n    };\n}\n\nconst QueryEngine = withStyles(styles)(QueryEngineC);\n\nexport default QueryEngine;","import 'date-fns';\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\nimport {Link as RouterLink, Redirect} from 'react-router-dom';\nimport '../index.css';\nimport {Box, createStyles, Theme, WithStyles} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport {Chart} from \"react-google-charts\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {withStyles} from \"@material-ui/styles\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Economy from \"./Economy\";\nimport QueryEngine from \"./QueryEngine\";\n\nconst styles = (theme: Theme) => createStyles({\n    root: {\n        flexGrow: 1\n    },\n    card: {\n        paddingBottom: 50\n    },\n    title: {\n        textAlign: \"center\",\n        marginTop: 20,\n        marginBottom: 5\n    },\n});\n\ninterface AnalyticsProps extends WithStyles<typeof styles> {\n}\n\ninterface AnalyticsState {\n}\n\nclass AnalyticsC extends React.Component<AnalyticsProps, AnalyticsState> {\n    constructor(props: AnalyticsProps) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    public render() {\n        return (\n            <div className={this.props.classes.root}>\n                <Grid container spacing={5}>\n                    <Grid item xs={6}>\n                        <Card className={this.props.classes.card}>\n                            <Typography\n                                variant={\"h4\"}\n                                className={this.props.classes.title}\n                            >\n                                Økonomi\n                            </Typography>\n                            <Container maxWidth={\"lg\"}>\n                                <Economy />\n                            </Container>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Card className={this.props.classes.card}>\n                            <Typography\n                                variant={\"h4\"}\n                                className={this.props.classes.title}\n                            >\n                                Query\n                            </Typography>\n                            <Container maxWidth={\"lg\"}>\n                                <QueryEngine/>\n                            </Container>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nconst Analytics = withStyles(styles)(AnalyticsC);\n\nexport default Analytics;","import 'date-fns';\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\nimport {Link as RouterLink, Redirect} from 'react-router-dom';\nimport '../index.css';\nimport {Box, createStyles, Theme, WithStyles} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport {Chart} from \"react-google-charts\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {withStyles} from \"@material-ui/styles\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport SearchSelector from \"../util/SearchSelector\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HostString from \"../util/HostString\";\nimport RunMode from \"../util/RunMode\";\nimport ApiInterface from \"../util/ApiInterface\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst styles = (theme: Theme) => createStyles({\n    root: {\n        flexGrow: 1\n    },\n    card: {\n        paddingBottom: 50\n    },\n    title: {\n        textAlign: \"center\",\n        marginTop: 20,\n        marginBottom: 5\n    },\n});\n\ninterface SettingsProps extends WithStyles<typeof styles> {\n}\n\ninterface SettingsState {\n    isLoadingUsers: boolean\n\n    passwordChanged: boolean\n    passwordChanging: boolean\n\n    oldPassword: string | null\n    newPassword: string | null\n\n    showAddAsAdminButton: boolean\n    addAdminUser: string | null\n\n    users: Array<string>\n    admins: Array<string>\n\n    changePasswordMessage: string\n}\n\ninterface AdminRequestJsonBody {\n    email: string\n}\n\ninterface ChangePasswordRequestJsonBody {\n    oldPassword: string\n    newPassword: string\n}\n\ninterface ChangePasswordResponse {\n    message: string\n}\n\ninterface Emails {\n    userEmails: Array<string>\n    adminEmails: Array<string>\n}\n\nclass SettingsC extends React.Component<SettingsProps, SettingsState> {\n    constructor(props: SettingsProps) {\n        super(props);\n        this.state = {\n            isLoadingUsers: true,\n            passwordChanged: false,\n            passwordChanging: false,\n            oldPassword: null,\n            newPassword: null,\n            showAddAsAdminButton: false,\n            addAdminUser: null,\n\n            users: [],\n            admins: [],\n\n            changePasswordMessage: ''\n        };\n    }\n\n    public componentDidMount(): void {\n        const host = HostString;\n\n        if (RunMode == \"WithServer\") {\n            ApiInterface.getAuthenticated<Emails>(\"/admin/adminsAndUsers\", host).then((responseJson: Emails) => {\n                this.setState({\n                    users: responseJson.userEmails,\n                    admins: responseJson.adminEmails,\n                    isLoadingUsers: false\n                });\n            });\n        } else {\n            new Promise( resolve => setTimeout(resolve, 250) )\n                .then((_) => this.setState({\n                    users: [\"sagra16\", \"anmor16\", \"mkris16\", \"gajen16\"],\n                    admins: [],\n                    isLoadingUsers: false\n                }));\n        }\n    }\n\n    public render() {\n        return (\n            <div className={this.props.classes.root}>\n                <Grid container spacing={5}>\n                    <Grid item xs={6}>\n                        <Card className={this.props.classes.card}>\n                            <Typography\n                                variant={\"h4\"}\n                                className={this.props.classes.title}\n                            >\n                                Indstillinger\n                            </Typography>\n                            <Container maxWidth={\"lg\"}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    id=\"oldpassword\"\n                                    label=\"Old password\"\n                                    name=\"oldpassword\"\n                                    autoFocus\n                                    type=\"password\"\n                                    onChange={attr => this.setState({oldPassword: attr.target.value})}\n                                />\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    name=\"newpassword\"\n                                    label=\"New password\"\n                                    type=\"password\"\n                                    id=\"newpassword\"\n                                    onChange={attr => this.setState({newPassword: attr.target.value})}\n                                />\n                                <Box paddingBottom={2} />\n                                <Button\n                                    type=\"button\"\n                                    disabled={this.state.passwordChanging}\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={\"submit\"}\n                                    onClick={(e) => this.changePassword()}\n                                >\n                                    Change password\n                                </Button>\n                                <Box paddingBottom={3} />\n                                {(this.state.passwordChanging === false) ? null :\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        justify=\"center\"\n                                        alignItems=\"center\"\n                                    >\n                                        <Box justifyContent=\"center\" m={2}>\n                                            <CircularProgress/>\n                                        </Box>\n                                    </Grid>}\n                                {(this.state.changePasswordMessage === '') ? null :\n                                    <Typography\n                                        variant={\"h2\"}\n                                        className={this.props.classes.title}\n                                    >\n                                        {this.state.changePasswordMessage}\n                                    </Typography>}\n                            </Container>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Card className={this.props.classes.card}>\n                            <Typography\n                                variant={\"h4\"}\n                                className={this.props.classes.title}\n                            >\n                                Administratore\n                            </Typography>\n                            <Container maxWidth={\"lg\"}>\n                                {(this.state.isLoadingUsers === true) ?\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        justify=\"center\"\n                                        alignItems=\"center\"\n                                    >\n                                        <Box justifyContent=\"center\" m={2}>\n                                            <CircularProgress/>\n                                        </Box>\n                                    </Grid>\n                                    :\n                                    <div>\n                                    <Box paddingTop={2} />\n                                    <Table>\n                                        <TableHead>\n                                            <TableCell align=\"left\">Navn</TableCell>\n                                            <TableCell align=\"left\">Brugernavn</TableCell>\n                                            <TableCell align=\"left\"></TableCell>\n                                        </TableHead>\n                                        <TableHead>\n                                            {\n                                                this.state.admins.map((value: string) => {\n                                                    return (<TableRow>\n                                                        <TableCell align=\"left\">{value}</TableCell>\n                                                        <TableCell align=\"left\">{value}</TableCell>\n                                                        <TableCell align=\"left\">\n                                                            <IconButton aria-label=\"delete\">\n                                                                <DeleteIcon fontSize=\"default\" onClick={((e) => this.removeAdmin(value))}/>\n                                                            </IconButton>\n                                                        </TableCell>\n                                                    </TableRow>);\n                                                })\n                                            }\n                                        </TableHead>\n                                    </Table>\n                                    <Box paddingBottom={3} />\n                                    <SearchSelector\n                                        label={\"Brugernavn\"}\n                                        choices={this.state.users}\n                                        onSelect={(e: string) => this.setState({\n                                            showAddAsAdminButton: true,\n                                            addAdminUser: e\n                                        })}\n                                    />\n                                    <Box paddingBottom={3} />\n                                    {this.renderAddAdminButton()}\n                                    <Box paddingBottom={10} />\n                                </div>}\n                            </Container>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n\n    private renderAddAdminButton(): React.ReactNode | null {\n        if (this.state.showAddAsAdminButton) {\n            return (\n                <Button\n                    type=\"button\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={\"submit\"}\n                    onClick={((e) => this.addAdmin())}\n                >\n                    Tilføj som administrator\n                </Button>\n            );\n        } else {\n            return (<Box paddingBottom={2} />);\n        }\n    }\n\n    private removeAdmin(user: string): Promise<any> {\n        const host = HostString;\n\n        if (RunMode == \"WithServer\") {\n            const requestBody: AdminRequestJsonBody = {\n                email: user\n            };\n\n            return ApiInterface.postAuthenticated<object, AdminRequestJsonBody>(\"/admin/removeAdmin\", requestBody, host).then(_ => {\n                if (this.state.admins.includes(user)) {\n                    this.setState({\n                        admins: this.state.admins.filter((value: string) => value !== user),\n                        users: this.state.users.concat([user])\n                    })\n                }\n            });\n        } else {\n            return new Promise( resolve => setTimeout(resolve, 250) )\n                .then((u) => {\n                    const result = true;\n                    if (result) {\n                        //Remove admin locally\n                        if (this.state.admins.includes(user)) {\n                            this.setState({\n                                admins: this.state.admins.filter((value: string) => value !== user),\n                                users: this.state.users.concat([user])\n                            })\n                        }\n                    }\n                });\n        }\n    }\n\n    private addAdmin(): Promise<any> | null {\n        const user = this.state.addAdminUser;\n\n        if (user) {\n            const host = HostString;\n\n            if (this.state.addAdminUser === null) {\n                return null;\n            } else if (RunMode == \"WithServer\") {\n                const requestBody: AdminRequestJsonBody = {\n                    email: this.state.addAdminUser\n                };\n\n                return ApiInterface.postAuthenticated<object, AdminRequestJsonBody>(\"/admin/addAdmin\", requestBody, host).then(_ => {\n                    //Add admin locally\n                    if (!this.state.admins.includes(user)) {\n                        this.setState({\n                            admins: this.state.admins.concat([user]),\n                            users: this.state.users.filter((value: string) => value !== user)\n                        })\n                    }\n                });\n            } else {\n                return new Promise( resolve => setTimeout(resolve, 250) )\n                    .then((u) => {\n                        const result = true;\n                        if (result) {\n                            //Add admin locally\n                            if (!this.state.admins.includes(user)) {\n                                this.setState({\n                                    admins: this.state.admins.concat([user]),\n                                    users: this.state.users.filter((value: string) => value !== user)\n                                })\n                            }\n                        }\n                    });\n            }\n        } else {\n            return null;\n        }\n    }\n\n    private changePassword() {\n        this.setState({passwordChanging: true});\n\n        const host = HostString;\n\n        if (this.state.oldPassword === null || this.state.newPassword === null) {\n            return\n        } else if (RunMode == \"WithServer\") {\n            const requestBody: ChangePasswordRequestJsonBody = {\n                oldPassword: this.state.oldPassword,\n                newPassword: this.state.newPassword\n            };\n\n            ApiInterface.postAuthenticated<ChangePasswordResponse, ChangePasswordRequestJsonBody>(\"/admin/changePassword\", requestBody, host).then((responseJson) => {\n                this.setState({\n                    passwordChanging: false,\n                    passwordChanged: true,\n                    changePasswordMessage: responseJson.message\n                })\n            });\n        } else {\n            new Promise( resolve => setTimeout(resolve, 250) ).then(_ => this.setState({\n                passwordChanging: false,\n                passwordChanged: true,\n                changePasswordMessage: \"Hello\"\n            }))\n        }\n    }\n}\n\nconst Settings = withStyles(styles)(SettingsC);\n\nexport default Settings;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {Route, Link, BrowserRouter} from 'react-router-dom'\nimport Register from \"./register/Register\";\nimport Signin from \"./signin/Signin\";\nimport Landing from \"./Landing\";\nimport Home from \"./home/Home\";\nimport App from \"./App\";\nimport LoggedInFrame from \"./global/LoggedInFrame\";\nimport Soogning from \"./soogning/Soogning\";\nimport Analytics from \"./analytics/Analytics\";\nimport Settings from \"./settings/Settings\";\nimport MaybeWebsocket from \"./util/MaybeWebsocket\";\nimport HostString from \"./util/HostString\";\nimport * as Cookies from \"js-cookie\";\n\nconst routing = (\n  <BrowserRouter>\n      <div className={\"global\"}>\n          <Route exact path=\"/\" component={App} />\n          <Route exact path=\"/signin\" component={Signin} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/home\" render={(props) => {\n              const prefix = (() => {\n                 if (process.env.NODE_ENV === \"production\") {\n                     \"wss\"\n                 } else {\n                     \"ws\"\n                 }\n              })();\n\n              MaybeWebsocket.set(() => new WebSocket(prefix + \"://\" + HostString + \"/ws\", Cookies.get('dm874_jwt')));\n\n              return (\n                  <LoggedInFrame child={<Home/>}/>\n              )\n          }} />\n          <Route exact path=\"/soogning\" render={(props) => (\n              <LoggedInFrame child={<Soogning/>}/>\n          )} />\n          <Route exact path=\"/analytics\" render={(props) => (\n              <LoggedInFrame child={<Analytics/>}/>\n          )} />\n          <Route exact path=\"/settings\" render={(props) => (\n              <LoggedInFrame child={<Settings/>}/>\n          )} />\n      </div>\n  </BrowserRouter>\n);\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["signin/Signin.tsx","App.tsx","serviceWorker.ts","register/Register.tsx","home/Landing.tsx","index.tsx"],"names":["Signin","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","localStorage","getItem","handleSubmit","event","axios","post","state","then","r","asString","data","startsWith","document","cookie","slice","length","setState","loggedIn","loginError","username","password","_this2","classes","react_default","a","createElement","react_router","to","Container","component","maxWidth","CssBaseline","className","papers","form","TextField","variant","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","attr","target","value","type","FormControlLabel","control","Checkbox","color","Button","submit","onClick","Grid","container","item","Link","RouterLink","React","Component","withStyles","theme","@global","body","backgroundColor","palette","common","white","marginTop","spacing","display","alignItems","avatar","secondary","main","width","withTheme","App","signin_Signin","Boolean","window","location","hostname","match","Register","console","log","showDialogue","Dialog","open","onClose","x","aria-labelledby","aria-describedby","DialogTitle","DialogActions","routing","react_router_dom","exact","path","Landing","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1e13034c.chunk.js","sourcesContent":["import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {Theme, withStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { flexbox } from '@material-ui/system';\nimport axios from 'axios';\nimport {Link as RouterLink, Redirect} from 'react-router-dom';\n\nconst signinStyle = (theme: Theme) => ({\n    '@global': {\n        body: {\n            backgroundColor: theme.palette.common.white,\n        },\n    },\n    papers: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\ninterface SignInProps {\n    classes?: any;\n}\n\ninterface SignInState {\n    username: string | null;\n    password: string | null;\n    loginError: string | null;\n    loggedIn: boolean;\n}\n\nclass Signin extends React.Component<SignInProps, SignInState> {\n    constructor(props: SignInProps) {\n        super(props);\n        this.state = {\n            username: null,\n            password: null,\n            loginError: null,\n            loggedIn: false\n        };\n    }\n\n    componentDidMount = (): void => {\n        const jwt = localStorage.getItem(\"dm874-jwt\");\n\n        if (jwt == null) {\n        }\n    };\n\n    public handleSubmit = (event: any) => {\n        axios.post(\"/login\", this.state).then((r) => {\n            const asString = (r.data as string);\n            if (asString.startsWith(\"Token:\")) {\n                document.cookie = \"dm874_jwt=\" + asString.slice(\"Token:\".length);\n                this.setState({loggedIn: true});\n            } else {\n                this.setState({loginError: asString});\n            }\n        });\n    };\n\n    public  render() {\n        const classes = this.props.classes;\n\n        if (this.state.loggedIn) {\n            return <Redirect to={\"/home\"}/>;\n        }\n\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className={classes.papers}>\n                    <div className={classes.form}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"username\"\n                            label=\"Username\"\n                            name=\"username\"\n                            autoComplete=\"username\"\n                            autoFocus\n                            onChange={attr => this.setState({username: attr.target.value})}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            onChange={attr => this.setState({password: attr.target.value})}\n                        />\n                        <FormControlLabel\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\n                            label=\"Remember me\"\n                        />\n                        <Button\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                            onClick={this.handleSubmit}\n                        >\n                            Sign In\n                        </Button>\n                        <Grid container>\n                            <Grid item>\n                                <Link component={RouterLink} to=\"/register\" variant=\"body2\">\n                                    {\"Don't have an account? Sign Up\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </div>\n            </Container>\n        );\n    }\n}\n\nexport default withStyles(signinStyle, {withTheme: true})(Signin as any) as any;\n","import React from 'react';\nimport './App.css';\nimport Signin from \"./signin/Signin\";\n\nconst App: React.FC = () => {\n    const jwt = localStorage.getItem(\"dm874-jwt\");\n\n    if (jwt == null) {\n        return (\n            <div>\n                <Signin></Signin>\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                <h1>YOU ARE SIGNED IN!</h1>\n            </div>\n        );\n    }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {Theme, withStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { flexbox } from '@material-ui/system';\nimport axios from 'axios';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nconst registerStyle = (theme: Theme) => ({\n    '@global': {\n        body: {\n            backgroundColor: theme.palette.common.white,\n        },\n    },\n    papers: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\ninterface RegisterProps {\n    classes?: any;\n}\n\ninterface RegisterState {\n    username: string | null;\n    password: string | null;\n    showDialogue: boolean;\n}\n\nclass Register extends React.Component<RegisterProps, RegisterState> {\n    constructor(props: RegisterProps) {\n        super(props);\n        this.state = {\n            username: null,\n            password: null,\n            showDialogue: false\n        };\n    }\n\n\n    public handleSubmit = (event: any) => {\n        axios.post(\"/register\", this.state).then((r) => {\n            console.log(r);\n        }).then((r) => {\n            this.setState({showDialogue: true});\n        });\n    };\n\n    public  render() {\n        const classes = this.props.classes;\n\n        return (\n            <div>\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <CssBaseline />\n                    <div className={classes.papers}>\n                        <div className={classes.form}>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"username\"\n                                label=\"Username\"\n                                name=\"username\"\n                                autoComplete=\"username\"\n                                autoFocus\n                                onChange={attr => this.setState({username: attr.target.value})}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                onChange={attr => this.setState({password: attr.target.value})}\n                            />\n                            <FormControlLabel\n                                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                                label=\"Remember me\"\n                            />\n                            <Button\n                                type=\"button\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                onClick={this.handleSubmit}\n                            >\n                                Sign Up\n                            </Button>\n                            <Grid container>\n                                <Grid item>\n                                    <Link component={RouterLink} to=\"/signin\" variant=\"body2\">\n                                        {\"Sign in\"}\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </div>\n                </Container>\n                <Dialog\n                    open={this.state.showDialogue}\n                    onClose={(x) => this.setState({showDialogue: false})}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"You have successfully registered.\"}</DialogTitle>\n                    <DialogActions>\n                        <Button onClick={(x) => this.setState({showDialogue: false})} color=\"primary\">\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(registerStyle, {withTheme: true})(Register as any) as any;\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {Theme, withStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { flexbox } from '@material-ui/system';\nimport axios from 'axios';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nconst registerStyle = (theme: Theme) => ({\n    '@global': {\n        body: {\n            backgroundColor: theme.palette.common.white,\n        },\n    },\n    papers: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\ninterface RegisterProps {\n    classes?: any;\n}\n\ninterface RegisterState {\n\n}\n\nclass Register extends React.Component<RegisterProps, RegisterState> {\n    constructor(props: RegisterProps) {\n        super(props);\n        this.state = {\n\n        };\n    }\n\n\n\n    public  render() {\n        const classes = this.props.classes;\n\n        return (\n            <h1>Hey</h1>\n        );\n    }\n}\n\nexport default withStyles(registerStyle, {withTheme: true})(Register as any) as any;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Route, Link, BrowserRouter} from 'react-router-dom'\nimport Register from \"./register/Register\";\nimport Signin from \"./signin/Signin\";\nimport Landing from \"./home/Landing\";\n\nconst routing = (\n  <BrowserRouter>\n      <div>\n          <Route exact path=\"/\" component={App} />\n          <Route exact path=\"/signin\" component={Signin} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/home\" component={Landing} />\n      </div>\n  </BrowserRouter>\n);\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}